并发与多线程

    在C++11之前，语言本身和C++标准库都不支持并发（concurrency)，虽然编译器实现可以任意对此提供某些支持。在C++11中情况改变了，不论内核语言或标准库都加强支持并发编程(concurrent programming)。
    以下适用于内核语言： 
    •如今具备这样一个内存模型（memory model) , 保证当你修改“被不同的两个线程 使用的”两个不同对象时，它们彼此独立。在C++11之前，并不保证“某线程涂写一个 char” 不会干涉“另一线程涂写另一个 char” (见 IStrvustrup:C++0x] “The memory model” 一节)。 
    •引入一个新关键字thread_local，用来定义“线程特定（thread-specific)”的变量和对象。 
    标准库则提供以下特性： 
    •若干与线程安全（thread safety)相关的保证。 
    •支持类和函数的并发运算（启动和同步多个线程)。

    




